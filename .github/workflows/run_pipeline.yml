name: Run Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  release:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv

    steps:
      - uses: actions/checkout@v3

      - name: Set up ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - uses: pre-commit/action@v2.0.3
        if: ${{ matrix.os == 'ubuntu-latest'}}

      - name: Install poetry
        run: |
          curl -sSL "https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py" | python

      - name: Update PATH
        if: ${{ matrix.os != 'windows-latest' }}
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache conda and data
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: |
            ~/conda_pkgs_dir
            ./r_dir
            ./SCE_DLPFC-n3_tran-etal.rda
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}-${{ hashFiles('r_dir/renv.lock') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          environment-file: environment.yml
          activate-environment: libd-rotation
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Get Data
        run: wget -nc https://libd-snrnaseq-pilot.s3.us-east-2.amazonaws.com/SCE_DLPFC-n3_tran-etal.rda

      - name: Install with poetry
        run: poetry install

      - name: Test run
        run: |
          python scripts/convert_anndata.py ${RENV_PATHS_ROOT} renv.lock SCE_DLPFC-n3_tran-etal.rda sce_tran.h5ad
