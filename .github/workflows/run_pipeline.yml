name: Run Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  release:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv

    steps:
      - uses: actions/checkout@v3

      - name: Set up ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - uses: pre-commit/action@v2.0.3
        if: ${{ matrix.os == 'ubuntu-latest'}}

      - uses: r-lib/actions/setup-r@v2

      - name: Setup R dependencies
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: sudo apt install -y libcurl4-openssl-dev

      - name: Cache Renv Package and data
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.RENV_PATHS_ROOT }}
            ./SCE_DLPFC-n3_tran-etal.rda
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Get Data
        run: wget -nc https://libd-snrnaseq-pilot.s3.us-east-2.amazonaws.com/SCE_DLPFC-n3_tran-etal.rda

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
