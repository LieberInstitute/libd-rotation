name: Run Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  release:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - uses: pre-commit/action@v2.0.3
        if: ${{ matrix.os == 'ubuntu-latest'}}

      - name: Set RENV_PATHS_ROOT
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
      - name: Install and activate renv
        run: |
          install.packages("renv")
          renv::activate()
        shell: Rscript {0}

      - name: Get R and OS version
        id: get-version
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
        shell: Rscript {0}

      - name: Restore Renv package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Get R and OS version
        run: |
          renv::restore()
        shell: Rscript {0}
